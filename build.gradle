buildscript {
    ext.kotlinVersion = '1.3.61'

    repositories { jcenter() }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion"
    }
}

plugins {
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61' apply false
    id 'com.github.hierynomus.license' version '0.15.0' apply false
}

apply plugin: 'kotlinx-serialization'
apply plugin: 'org.jetbrains.kotlin.plugin.scripting'

allprojects {
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'com.github.hierynomus.license'

    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8'
    }

    compileKotlin {
        sourceCompatibility = JavaVersion.VERSION_11
        kotlinOptions.jvmTarget = JavaVersion.VERSION_11
    }

    compileTestKotlin {
        sourceCompatibility = JavaVersion.VERSION_11
        kotlinOptions.jvmTarget = JavaVersion.VERSION_11
    }
}

dependencies {
    project(':plugins').subprojects { pluginProject ->
        if (pluginProject.buildFile.exists()) {
            runtimeOnly pluginProject
        }
    }
    api group: 'io.guthix.oldscape', name: 'oldscape-cache', version: '0.1-SNAPSHOT'
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlinVersion
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-scripting-common', version: kotlinVersion
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: kotlinCoroutinesVersion
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-serialization-runtime', version: kotlinSerializationVersion
    implementation group: 'com.charleskorn.kaml', name: 'kaml', version: kamlVersion
    implementation group: 'io.netty', name: 'netty-all', version: nettyVersion
    implementation group: 'io.github.classgraph', name: 'classgraph', version: classGraphVersion
    implementation group: 'io.github.microutils', name: 'kotlin-logging', version: kotlinLoggingVersion
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-XXLanguage:+InlineClasses']
    }
}

license {
    header = file('\\..\\license\\GPL.txt')
    exclude("*\\main_file_cache.*")
    exclude("*\\xteas.json")
}