import java.nio.file.Paths
import java.nio.file.Path

pluginManagement {
    plugins {
        id 'org.jetbrains.kotlin.jvm' version kotlinVersion
        id 'com.github.hierynomus.license' version licensePluginVersion
    }
}

rootProject.name = 'oldscape-server'

includeBuild('../cache') {
    dependencySubstitution {
        substitute module('io.guthix.oldscape:oldscape-cache') with project(':')
    }
}

def pluginRootDir = rootProject.projectDir.toPath().resolve("plugins")

def includeModules(Path pluginDir) {
    if (pluginDir.toFile().exists()) {
        def gradleBuildFiles = new FileNameFinder().getFileNames(pluginDir.toString(), "**/*.gradle")
        gradleBuildFiles.each { filename ->
            def buildFilePath = Paths.get(filename)
            def moduleDir = buildFilePath.parent
            def relativePath = pluginDir.relativize(moduleDir)
            def pluginName = relativePath.toString().replace(File.separator, ":")
            include ":plugins:$pluginName"
        }
    }
}

include 'dimensions'
include 'blueprints'
includeModules(pluginRootDir)
